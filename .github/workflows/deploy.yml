name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Detect project directory
        id: detect_dir
        shell: bash
        run: |
          set -e
          FIRST=$(git ls-files 'pnpm-lock.yaml' 'package.json' | head -n 1 || true)
          if [ -z "$FIRST" ]; then
            echo "dir=." >> $GITHUB_OUTPUT
            echo "artifact='dist'" >> $GITHUB_OUTPUT
            echo "has_manifest=false" >> $GITHUB_OUTPUT
          else
            DIR=$(dirname "$FIRST")
            echo "dir=$DIR" >> $GITHUB_OUTPUT
            echo "artifact="$DIR/dist"" >> $GITHUB_OUTPUT
            if [ -f "$DIR/package.json" ] || [ -f "$DIR/pnpm-lock.yaml" ]; then
              echo "has_manifest=true" >> $GITHUB_OUTPUT
            else
              echo "has_manifest=false" >> $GITHUB_OUTPUT
            fi
          fi
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # No cache to avoid lockfile requirement errors
      
      - name: Enable Corepack
        run: corepack enable
      
      - name: Install dependencies
        if: ${{ steps.detect_dir.outputs.has_manifest == 'true' }}
        working-directory: ${{ steps.detect_dir.outputs.dir }}
        run: |
          corepack prepare pnpm@latest --activate
          pnpm install --no-frozen-lockfile
      
      - name: Build project
        if: ${{ steps.detect_dir.outputs.has_manifest == 'true' }}
        working-directory: ${{ steps.detect_dir.outputs.dir }}
        run: npm run build

      
      - name: Create static artifact (no manifest)
        if: ${{ steps.detect_dir.outputs.has_manifest != 'true' }}
        run: |
          echo "::error::Nessun package.json/pnpm-lock.yaml trovato. Ferma il job e richiedi AI Fix."
          exit 1
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        if: ${{ steps.detect_dir.outputs.has_manifest == 'true' }}
        uses: actions/upload-pages-artifact@v4
        with:
          path: ${{ steps.detect_dir.outputs.artifact }}
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4